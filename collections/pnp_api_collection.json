{
	"info": {
		"_postman_id": "11e52a75-6bfd-42e5-b07d-7a7933172b26",
		"name": "DBSAFER API [v1.0.78]",
		"description": "# üß™ Get started here\n\nPostman's powerful scripting feature helps you to write a range of API tests in JavaScript, including integration, regression, and contract tests.\n\nThis template demonstrates how to work with the Postman basic test syntax to test a single HTTP API request.\n\n## üîñ How to use this template?\n\n#### Step 1: Send requests\n\nSend the sample requests and view the response and test results.\n\n#### Step 2: Update the sample request URL\n\nReplace the sample request URLs with your desired API endpoints.\n\n#### Step 3: Customize tests\n\nCustomize the tests in the \"Tests\" tab if needed. Don't forget to save your changes.\n\n## üí™ Quick tips for writing tests\n\n- Organize your test scenarios by grouping your requests in [collections](https://www.getpostman.com/docs/v6/postman/collections/intro_to_collections) and [folders](https://www.getpostman.com/docs/v6/postman/collections/managing_collections#adding-folders), and naming them descriptively\n    \n- Document your API‚Äôs requirements using [markdown in the descriptions](https://www.getpostman.com/docs/v6/postman/collections/using_markdown_for_descriptions)\n    \n- Use [variables](https://www.getpostman.com/docs/v6/postman/environments_and_globals/variables) to simulate more sophisticated user flows\n    \n- Common tests that will be run after every request can be added to collection-level tests or folder-level tests\n    \n\n## ‚ÑπÔ∏è Resources\n\n- [Test scripts](https://www.getpostman.com/docs/v6/postman/scripts/test_scripts)\n    \n- [Test examples](https://www.getpostman.com/docs/v6/postman/scripts/test_examples)\n    \n- [Quick reference guide](https://community.getpostman.com/t/the-postman-cheatsheet-quick-reference-guide/1054)\n    \n- [Examples and guides](https://github.com/DannyDainton/All-Things-Postman)\n    \n- [Writing tests in Postman](http://blog.getpostman.com/2017/10/25/writing-tests-in-postman/)\n    \n- [API testing tips from a Postman professional](http://blog.getpostman.com/2017/07/28/api-testing-tips-from-a-postman-professional/)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38515816"
	},
	"item": [
		{
			"name": "Ïù∏Ï¶ù API",
			"item": [
				{
					"name": "1.1Ïù∏Ï¶ùÌÜ†ÌÅ∞ Î∞úÍ∏â",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var json_data = JSON.parse(responseBody);",
									"pm.collectionVariables.set(\"AccessToken\", json_data.accessToken)",
									"console.log(json_data)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AccessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"managerId\": \"{{ManagerID}}\",\n    \"managerPassword\": \"{{ManagerPW}}\" \n}\n\n// {\n//     \"managerId\": \"admin\",\n//     \"managerPassword\": \"\" \n// }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/auth/token",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"port": "{{Port}}",
							"path": [
								"dbsafer",
								"api",
								"v1",
								"auth",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "1.2Ïù∏Ï¶ùÌÜ†ÌÅ∞ Î∞úÍ∏â(V2)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// pm.test(\"Print response data\", function () {",
									"//     console.log(\"Access Token: \" + pm.response.json().accessToken);",
									"//     console.log(\"Access Token Expired At: \" + pm.response.json().accessTokenExpiredAt);",
									"//     console.log(\"Refresh Token: \" + pm.response.json().refreshToken);",
									"//     console.log(\"Refresh Token Expired At: \" + pm.response.json().refreshTokenExpiredAt);",
									"//     console.log(\"Token Type: \" + pm.response.json().tokenType);",
									"// });",
									"",
									"pm.test(\"Set Token\", function(){",
									"    pm.collectionVariables.set(\"AccessToken(v2)\", pm.response.json().accessToken)",
									"    pm.collectionVariables.set(\"refreshToken\", pm.response.json().refreshToken)",
									"})",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AccessToken(v2)}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"managerId\": \"{{ManagerID}}\",\n    \"managerPassword\": \"{{SecretKey}}\",\n    \"grantType\" : \"AUTH_USER\",\n    \"clientId\" : \"{{ClientID}}\"\n}\n\n// {\n//     \"managerId\": \"admin\",\n//     \"managerPassword\": \"LpzdAchPkcdqZbAb3Vx+6Q==\",\n//     \"grantType\" : \"AUTH_USER\",\n//     \"clientId\" : \"test_client\"\n// }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v2/auth/token",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"port": "{{Port}}",
							"path": [
								"dbsafer",
								"api",
								"v2",
								"auth",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "1.3Ïù∏Ï¶ùÌÜ†ÌÅ∞ Ïû¨Î∞úÍ∏â(V2)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Set Refresh Token\", function(){",
									"    pm.collectionVariables.set(\"refreshToken\", pm.response.json().refreshToken)",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AccessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"grantType\" : \"REFRESH_TOKEN\",\n    \"clientId\" : \"{{ClientID}}\",\n    \"refreshToken\": \"{{refreshToken}}\"\n}\n\n// {\n//     \"grantType\" : \"REFRESH_TOKEN\",\n//     \"clientId\" : \"test_client\",\n//     \"refreshToken\": \"\"\n// }\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v2/auth/token",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"port": "{{Port}}",
							"path": [
								"dbsafer",
								"api",
								"v2",
								"auth",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "1.4ÏïîÌò∏ÌÇ§ Î∞úÍ∏â",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AccessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/security/public-key",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"port": "{{Port}}",
							"path": [
								"dbsafer",
								"api",
								"v1",
								"security",
								"public-key"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ÏÇ¨Ïö©Ïûê Í¥ÄÎ¶¨ API",
			"item": [
				{
					"name": "ÏÇ¨Ïö©Ïûê Í¥ÄÎ¶¨",
					"item": [
						{
							"name": "1.1 ÏÇ¨Ïö©Ïûê Î™©Î°ù Ï°∞Ìöå",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// pm.test(\"ÏùëÎãµ ÌïÑÎìú ÌôïÏù∏\", function(){",
											"//     let res = pm.response.json();",
											"//     let keys = [\"id\", \"name\", \"department\", \"departmentCode\", ",
											"//                 \"jobPosition\", \"jobTitle\", \"phoneNumber\",",
											"//                 \"mobilePhoneNumber\", \"email\", \"firstAuthType\", ",
											"//                 \"secondAuthType\", \"comment\", \"startDate\", \"endDate\",",
											"//                 \"createDate\", \"passwordChangeDate\", \"lock\", \"lockReason\"]",
											"    ",
											"//     res.results.forEach(function(user) {",
											"//         pm.expect(user).to.have.keys(keys).or.throw(\"One or more required fields are missing\");",
											"//     });",
											"// });",
											"",
											"",
											"pm.test(\"ÏÉÅÌÉúÏΩîÎìú 200 Ï≤¥ÌÅ¨\",function(){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"ÏùëÎãµ Í∏∏Ïù¥ ÌôïÏù∏\", function () {",
											"    let res = pm.response.json().results;",
											"    const res_length = Object.entries(res).length;",
											"    pm.expect(res_length).to.eql(10000, \"if res_length == 10000 is passed else failed\");",
											"});",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/users/",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"users",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "1.2 ÏÇ¨Ïö©Ïûê Ï°∞Ìöå",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// ÏùëÎãµÏΩîÎìú ",
											"pm.test(\"ÏùëÎãµÏΩîÎìú ÌôïÏù∏: \",function(){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"// ÏùëÎãµ Fields Ï§ë Required Ìï≠Î™©Îì§ Ï°¥Ïû¨ÌïòÎäîÏßÄ ÌôïÏù∏ ",
											"pm.test(\"ÏùëÎãµ ÌïÑÎìú ÌôïÏù∏: \", function(){",
											"    let res = pm.response.json();",
											"    console.log(res);",
											"    let keys = ['id', 'name', \"department\", \"departmentCode\", ",
											"                \"jobPosition\", \"jobTitle\", \"phoneNumber\",",
											"                \"mobilePhoneNumber\", \"email\", \"firstAuthType\", ",
											"                \"secondAuthType\", \"comment\", \"startDate\", \"endDate\",",
											"                \"createDate\", \"passwordChangeDate\", \"lock\", \"lockReason\"]",
											"    pm.expect(res).to.have.keys(keys)",
											"});",
											"",
											"",
											"// ÏùëÎãµ ÏΩòÌÖêÏ∏† ÌÉÄÏûÖ ",
											"pm.test(\"Response Content-Type is application/json\", function () {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"});",
											"",
											"// Ïù¥Î©îÏùº ÌòïÏãù ÌôïÏù∏ ",
											"pm.test(\"Email is in a valid format\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.email).to.be.a('string');",
											"    pm.expect(responseData.email).to.match(/^.+@.+\\..+$/);",
											"});",
											"",
											"",
											"pm.test(\"StartDate and EndDate are in valid date format\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    // pm.expect(responseData.startDate).to.match(/^\\d{4}-\\d{2}-\\d{2}$/);",
											"    pm.expect(responseData.startDate).to.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$/);",
											"    // pm.expect(responseData.endDate).to.match(/^\\d{4}-\\d{2}-\\d{2}$/);",
											"    pm.expect(responseData.endDate).to.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$/);",
											"});",
											"",
											"// pm.test(\"Lock is a boolean value\", function () {",
											"//     const responseData = pm.response.json();",
											"    ",
											"//     pm.expect(responseData).to.be.an('object');",
											"//     pm.expect(responseData.lock).to.be.a('boolean');",
											"// });",
											"",
											"",
											"// pm.test(\"LockReason is a non-empty string\", function () {",
											"//   const responseData = pm.response.json();",
											"  ",
											"//   pm.expect(responseData).to.be.an('object');",
											"//   pm.expect(responseData.lockReason).to.be.a('string').and.to.have.lengthOf.at.least(1, \"LockReason should be a non-empty string\");",
											"// });",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": []
								},
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/users/test1",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"users",
										"test1"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3 ÏÇ¨Ïö©Ïûê Ï∂îÍ∞Ä",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('ÏÉÅÌÉúÏΩîÎìú ÌôïÏù∏:', function () {",
											"    pm.response.to.have.status(201);",
											"})",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"followOriginalHttpMethod": false
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "// {\n//     \"id\": \"{{id}}\",\n//     \"password\": \"{{password}}\",\n//     \"name\": \"{{name}}\",\n//     \"department\": \"{{department}}\",\n//     \"departmentCode\": \"{{departmentCode}}\",\n//     \"jobPosition\": \"{{jobPosition}}\",\n//     \"jobTitle\": \"{{jobTitle}}\",\n//     \"phoneNumber\": \"{{phoneNumber}}\",\n//     \"mobilePhoneNumber\": \"{{mobilePhoneNumber}}\",\n//     \"email\": \"{{email}}\",\n//     \"firstAuthType\": \"{{firstAuthType}}\",\n//     \"secondAuthType\": \"{{secondAuthType}}\",\n//     \"comment\": \"{{name}}\",\n//     \"startDate\": \"{{startDate}}\",\n//     \"endDate\": \"{{endDate}}\"\n// }\n\n{\n  \"id\" : \"gdhong001\",\n  \"password\" : \"cGFzc3dvcmQ=\",\n  \"name\" : \"ÌôçÍ∏∏Îèô\",\n  \"department\" : \"Í∞úÎ∞ú 1ÌåÄ\",\n  \"departmentCode\" : \"0001\",\n  \"jobPosition\" : \"Ï±ÖÏûÑÏó∞Íµ¨Ïõê\",\n  \"jobTitle\" : \"ÌååÌä∏Ïû•\",\n  \"phoneNumber\" : \"031-123-4567\",\n  \"mobilePhoneNumber\" : \"010-1234-5678\",\n  \"email\" : \"gdhong@pnpsecure.com\",\n  \"firstAuthType\" : \"NONE\",\n  \"secondAuthType\" : \"NONE\",\n  \"comment\" : \"Sample Account\",\n  \"startDate\" : \"2022-01-01T00:00:00\",\n  \"endDate\" : \"2025-12-31T23:59:59\"\n}\n\n\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/users",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.4 ÏÇ¨Ïö©Ïûê ÏàòÏ†ï",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Check status\",function(){",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// // Ï¥àÍ∏∞ id Í∞í ÏÑ§Ï†ï\r",
											"// pm.variables.set(\"currentId\", 1235);\r",
											"\r",
											"// // Í∞Å ÏöîÏ≤≠ÎßàÎã§ id Í∞íÏùÑ Ï¶ùÍ∞ÄÏãúÌÇ§Îäî Ìï®Ïàò\r",
											"// function increaseId() {\r",
											"//     let currentId = pm.variables.get(\"currentId\");\r",
											"//     currentId++;\r",
											"//     pm.variables.set(\"currentId\", currentId);\r",
											"// }"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\" : \"cGFzc3dvcmQ=\",\n  \"name\" : \"ÍπÄÍ∏∏Îèô\",\n  \"department\" : \"Í∞úÎ∞ú 100ÌåÄ\",\n  \"departmentCode\" : \"0001\",\n  \"jobPosition\" : \"Ï±ÖÏûÑÏó∞Íµ¨Ïõê\",\n  \"jobTitle\" : \"ÌååÌä∏Ïû•\",\n  \"phoneNumber\" : \"031-123-4567\",\n  \"mobilePhoneNumber\" : \"010-1234-5678\",\n  \"email\" : \"gdhong@pnpsecure.com\",\n  \"firstAuthType\" : \"NONE\",\n  \"secondAuthType\" : \"NONE\",\n  \"comment\" : \"Sample Account\",\n  \"startDate\" : \"2022-01-01T00:00:00\",\n  \"endDate\" : \"2025-12-31T23:59:59\"\n}\n\n\n// {\n//     \"password\": \"{{password}}\",\n//     \"name\": \"{{name}}\",\n//     \"department\": \"{{department}}\",\n//     \"departmentCode\": \"{{departmentCode}}\",\n//     \"jobPosition\": \"{{jobPosition}}\",\n//     \"jobTitle\": \"{{jobTitle}}\",\n//     \"phoneNumber\": \"{{phoneNumber}}\",\n//     \"mobilePhoneNumber\": \"{{mobilePhoneNumber}}\",\n//     \"email\": \"{{email}}\",\n//     \"firstAuthType\": \"{{firstAuthType}}\",\n//     \"secondAuthType\": \"{{secondAuthType}}\",\n//     \"comment\": \"{{name}}\",\n//     \"startDate\": \"{{startDate}}\",\n//     \"endDate\": \"{{endDate}}\"\n// }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/users/gdhong001",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"users",
										"gdhong001"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.5 ÏÇ¨Ïö©Ïûê ÏÇ≠Ï†ú",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Check status\",function(){",
											"    // // 204 response ; the server successfully processed the request, but there is no data to return. ",
											"    // if (pm.response.code === 204) {",
											"    //     console.error('Success: Post request was successful with status code 204');",
											"    // } ",
											"    ",
											"    // // Check for \"Not Found\" error (HTTP status code 404)",
											"    // else if (pm.response.code === 404) {",
											"    //     console.error('Not Found: User ID not found with status code 404');",
											"    // }",
											"",
											"    // // Handle other status codes as needed",
											"    // else {",
											"    //     console.error('Unhandled status code:', pm.response.code);",
											"    // }",
											"    var status = pm.response.status;",
											"    console.log(status)",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"http://{{Host}}:{{Port}}/dbsafer/api/v1/users/user001"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/users/gdhong001",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"users",
										"gdhong001"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.6 ÏÇ¨Ïö©Ïûê Ïû†Í∏à",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Check status\",function(){",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/users/lock",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"users",
										"lock"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.7 ÏÇ¨Ïö©Ïûê Ïû†Í∏à Ìï¥Ï†ú",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Check status\",function(){",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/users/gdhong8/unlock",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"users",
										"gdhong8",
										"unlock"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.8 ÏÇ¨Ïö©ÏûêÏùò Í∑∏Î£π Ï∂îÍ∞Ä",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Check status\",function(){",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/users/gdhong8/groups/1",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"users",
										"gdhong8",
										"groups",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.9 ÏÇ¨Ïö©ÏûêÏùò Í∑∏Î£π Ï†úÍ±∞",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Check status\",function(){",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/users/gdhong5/groups/4",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"users",
										"gdhong5",
										"groups",
										"4"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "ÏÇ¨Ïö©Ïûê Í∑∏Î£π Í¥ÄÎ¶¨",
					"item": [
						{
							"name": "2.1ÏÇ¨Ïö©Ïûê Í∑∏Î£π Î™©Î°ù Ï°∞Ìöå",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Check status\",function(){\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Response has result\", function(){\r",
											"    let res = pm.response.json();\r",
											"    let keys = ['index', 'name', 'comment']\r",
											"    \r",
											"    res.results.forEach(function(userGroups) {\r",
											"        // console.log(userGroups)\r",
											"        pm.expect(userGroups).to.have.keys(keys)\r",
											"    });\r",
											"\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/user/groups",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"user",
										"groups"
									]
								}
							},
							"response": []
						},
						{
							"name": "2.2ÏÇ¨Ïö©Ïûê Í∑∏Î£π Ï°∞Ìöå",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Check status\",function(){",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Response has result\", function(){",
											"    let res = pm.response.json();",
											"    let keys = ['index', 'name', 'comment']",
											"    pm.expect(res).to.have.keys(keys)",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/user/groups/5",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"user",
										"groups",
										"5"
									]
								}
							},
							"response": []
						},
						{
							"name": "2.3ÏÇ¨Ïö©Ïûê Í∑∏Î£π Ï∂îÍ∞Ä",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n//   \"name\" : \"SampleUserGroup005!@#$$\",\n//   \"name\" : \"LIjX1dDhHSIDL5ooxqkeelvAaH1sKnOmcNuCzjj3Hp88TZXuKklcjjCbaPeDjcYr\",\n  \"name\" : \"parent_group\",\n  \"comment\" : \"comment\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/user/groups",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"user",
										"groups"
									]
								}
							},
							"response": []
						},
						{
							"name": "2.4ÏÇ¨Ïö©Ïûê Í∑∏Î£π ÏàòÏ†ï",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Check status\",function(){",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// // Ï¥àÍ∏∞ id Í∞í ÏÑ§Ï†ï\r",
											"// pm.variables.set(\"currentId\", 1235);\r",
											"\r",
											"// // Í∞Å ÏöîÏ≤≠ÎßàÎã§ id Í∞íÏùÑ Ï¶ùÍ∞ÄÏãúÌÇ§Îäî Ìï®Ïàò\r",
											"// function increaseId() {\r",
											"//     let currentId = pm.variables.get(\"currentId\");\r",
											"//     currentId++;\r",
											"//     pm.variables.set(\"currentId\", currentId);\r",
											"// }"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\" : \"hN6BCMS1Vre1pYrwvf5bNkQU8Zq4TAeQW3jNMwFSfiJvW8GpQR1KCTje8rJ4443A\",\n  \"comment\" : \"sdfsdafsdf\"\n}\n\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/user/groups/5",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"user",
										"groups",
										"5"
									]
								}
							},
							"response": []
						},
						{
							"name": "2.5ÏÇ¨Ïö©Ïûê Í∑∏Î£π ÏÇ≠Ï†ú",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Check status\",function(){",
											"    // // 204 response ; the server successfully processed the request, but there is no data to return. ",
											"    // if (pm.response.code === 204) {",
											"    //     console.error('Success: Post request was successful with status code 204');",
											"    // } ",
											"    ",
											"    // // Check for \"Not Found\" error (HTTP status code 404)",
											"    // else if (pm.response.code === 404) {",
											"    //     console.error('Not Found: User ID not found with status code 404');",
											"    // }",
											"",
											"    // // Handle other status codes as needed",
											"    // else {",
											"    //     console.error('Unhandled status code:', pm.response.code);",
											"    // }",
											"    var status = pm.response.status;",
											"    console.log(status)",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"http://{{Host}}:{{Port}}/dbsafer/api/v1/users/user001"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/user/groups/{{index}}",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"user",
										"groups",
										"{{index}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "2.6ÏÇ¨Ïö©Ïûê Í∑∏Î£πÎÇ¥ ÏÇ¨Ïö©Ïûê Ï∂îÍ∞Ä",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Check status\",function(){",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/user/groups/1/users/gdhong",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"user",
										"groups",
										"1",
										"users",
										"gdhong"
									]
								}
							},
							"response": []
						},
						{
							"name": "2.7ÏÇ¨Ïö©ÏûêÏùò Í∑∏Î£π ÏÇ¨Ïö©Ïûê Ï†úÍ±∞",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Check status\",function(){",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/users/gdhong5/groups/4",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"users",
										"gdhong5",
										"groups",
										"4"
									]
								}
							},
							"response": []
						},
						{
							"name": "2.8ÏÇ¨Ïö©Ïûê Í∑∏Î£πÎÇ¥ ÏÇ¨Ïö©Ïûê Í∑∏Î£π Ï∂îÍ∞Ä",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Check status\",function(){",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/user/groups/7/subgroups/8",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"user",
										"groups",
										"7",
										"subgroups",
										"8"
									]
								}
							},
							"response": []
						},
						{
							"name": "2.9ÏÇ¨Ïö©ÏûêÏùò Í∑∏Î£π ÏÇ¨Ïö©Ïûê Í∑∏Î£π Ï†úÍ±∞",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Check status\",function(){",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/user/groups/7/subgroups/8",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"user",
										"groups",
										"7",
										"subgroups",
										"8"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "ÏÇ¨Ïö©Ïûê  IP/MAC Í¥ÄÎ¶¨",
					"item": [
						{
							"name": "3.1. ÏÇ¨Ïö©Ïûê IP/MAC Ï°∞Ìöå",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// pm.test(\"Response has Response fields\", function(){\r",
											"//     let responseData = pm.response.json();\r",
											"//     let keys = ['index', 'sno', 'ipAddr', 'ipAddrEnd', 'macAddr']\r",
											"    \r",
											"//     responseData.results.forEach(function(element) {\r",
											"//         console.log(element);\r",
											"//         pm.expect(element).to.have.keys(keys)\r",
											"//     });\r",
											"\r",
											"// });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/users/test1/ipmac",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"users",
										"test1",
										"ipmac"
									]
								}
							},
							"response": []
						},
						{
							"name": "3.2. ÏÇ¨Ïö©Ïûê IP/MAC Ï∂îÍ∞Ä",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"ipAddr\" : \"2.2.2.2\",\r\n  \"ipAddrEnd\" : \"2.2.2.255\",\r\n  \"macAddr\" : \"00:00:00:00:00:00\"\r\n}\r\n\r\n\r\n// ipAddr \r\n// {\r\n//     \"index\": 0,\r\n//     \"sno\": \"gdhong8\",\r\n//     \"ipAddr\": \"2.2.2.256\",\r\n//     \"ipAddrEnd\": \"2.2.2.255\",\r\n//     \"macAddr\": \"00:00:00:00:00:00\"\r\n// }\r\n\r\n\r\n// ipAddrEnd \r\n// {\r\n//     \"index\": 0,\r\n//     \"sno\": \"gdhong8\",\r\n//     \"ipAddr\": \"2.2.2.2\",\r\n//     \"ipAddrEnd\": \"2.2.2.256\",\r\n//     \"macAddr\": \"00:00:00:00:00:00\"\r\n// }\r\n\r\n\r\n{\r\n    \"index\": 0,\r\n    \"sno\": \"gdhong8\",\r\n    \"ipAddr\": \"2.2.2.2\",\r\n    \"ipAddrEnd\": \"2.2.2.255\",\r\n    \"macAddr\": \"00:00:00:00:00:GG\"\r\n}\r\n    ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/users/test10/ipmac",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"users",
										"test10",
										"ipmac"
									]
								}
							},
							"response": []
						},
						{
							"name": "3.3. ÏÇ¨Ïö©Ïûê IP/MAC ÏàòÏ†ï",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "// {\r\n//   \"index\" : 21, // Ïù¥ÎÜàÏù¥ Ï§ëÏöî ! \r\n//   \"sno\" : \"gdhong8!@#$\",\r\n//   \"ipAddr\" : \"3.3.3.1\",\r\n//   \"ipAddrEnd\" : \"3.3.3.2\",\r\n//   \"macAddr\" : \"00:00:00:00:00:00\"\r\n// }\r\n\r\n// {\r\n//     \"index\": 24,\r\n//     \"sno\": null,\r\n//     \"ipAddr\": \"2.2.2.255\",\r\n//     \"ipAddrEnd\": \"2.2.2.255\",\r\n//     \"macAddr\": \"00:00:00:00:00:00\"\r\n// }\r\n\r\n{\r\n    \"index\": \"{{index}}\",\r\n    \"sno\": \"{{sno}}\",\r\n    \"ipAddr\": \"{{ipAddr}}\",\r\n    \"ipAddrEnd\": \"{{ipAddrEnd}}\",\r\n    \"macAddr\": \"{{macAddr}}\"\r\n}\r\n\r\n// {\r\n//     \"index\": 26,\r\n//     \"sno\": null,\r\n//     \"ipAddr\": \"2.2.2.1\",\r\n//     \"ipAddrEnd\": \"2.2.2.255\",\r\n//     \"macAddr\": \"00:00:00:00:00:00\"\r\n// }\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/users/{{sno}}/ipmac",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"users",
										"{{sno}}",
										"ipmac"
									]
								}
							},
							"response": []
						},
						{
							"name": "3.4. ÏÇ¨Ïö©Ïûê IP/MAC ÏÇ≠Ï†ú",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/users/gdhong8/ipmac/28",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"users",
										"gdhong8",
										"ipmac",
										"28"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{AccessToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Í∞ùÏ≤¥Í¥ÄÎ¶¨ API",
			"item": [
				{
					"name": "1. Ï†ëÏÜçÍ≥ÑÏ†ï Í¥ÄÎ¶¨",
					"item": [
						{
							"name": "1.1 Ï†ëÏÜçÍ≥ÑÏ†ï Î™©Î°ù Ï°∞Ìöå",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// ÏùëÎãµ Fields Ï§ë Required Ìï≠Î™©Îì§ Ï°¥Ïû¨ÌïòÎäîÏßÄ ÌôïÏù∏ ",
											"pm.test(\"ÏùëÎãµ ÌïÑÎìú ÌôïÏù∏\", function(){",
											"    let res = pm.response.json();",
											"    let keys = ['id', 'name', \"department\", \"departmentCode\", ",
											"                \"jobPosition\", \"jobTitle\", \"phoneNumber\",",
											"                \"mobilePhoneNumber\", \"email\", \"firstAuthType\", ",
											"                \"secondAuthType\", \"comment\", \"startDate\", \"endDate\",",
											"                \"createDate\", \"passwordChangeDate\", \"lock\", \"lockReason\"]",
											"    ",
											"    res.results.forEach(function(user) {",
											"        pm.expect(user).to.have.keys(keys)",
											"    });",
											"});",
											"",
											"",
											"pm.test(\"ÏÉÅÌÉúÏΩîÎìú 200 Ï≤¥ÌÅ¨\",function(){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"// pm.test(\"Response has results\", function(){",
											"//     let res = pm.response.json();",
											"//     pm.expect(res).to.have.keys('results')",
											"// });",
											"",
											"// pm.test(\"Get length of results\", function(){",
											"//     // let res = pm.response.json().results;",
											"//     // res.forEach((num) => {console.log(num)}); // iteration by forEach",
											"//     // for (let r of res) console.log(r); // iteration by for of",
											"",
											"//     let res = pm.response.json().results;",
											"//     const res_length = Object.entries(res).length;",
											"",
											"//     // const pre_text = \"Í≤∞Í≥ºÍ∞íÏùò Í∏∏Ïù¥Îäî : \";",
											"//     // const result = pre_text + res_length;",
											"//     console.log(\"Í≤∞Í≥ºÍ∞íÏùò Í∏∏Ïù¥Îäî :\", res_length);",
											"// })",
											"",
											"// pm.test(\"Response Content-Type is application/json\", function () {",
											"//     pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"// });",
											"",
											"",
											"// pm.test(\"Lock field is a boolean value\", function () {",
											"//     const responseData = pm.response.json();",
											"    ",
											"//     pm.expect(responseData).to.be.an('object');",
											"//     pm.expect(responseData.lock).to.be.a('boolean');",
											"// });",
											"",
											"",
											"// pm.test(\"Each 'id' in the 'results' array is a non-empty string\", function () {",
											"//     const responseData = pm.response.json();",
											"    ",
											"//     pm.expect(responseData.results).to.be.an('array');",
											"//     responseData.results.forEach(function(user) {",
											"//         pm.expect(user.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"ID should be a non-empty string\");",
											"//     });",
											"// });",
											"",
											"",
											"// pm.test(\"Check if 'endDate' is either null or in a valid date format\", function () {",
											"//     const responseData = pm.response.json();",
											"    ",
											"//     pm.expect(responseData.results).to.be.an('array');",
											"//     responseData.results.forEach(function(user) {",
											"//         pm.expect(user.endDate).to.satisfy(function (endDate) {",
											"//             return endDate === null || Date.parse(endDate);",
											"//         }, \"endDate should be null or in a valid date format\");",
											"//     });",
											"// });",
											"",
											"",
											"// pm.test(\"Ensure that lockReason is a non-empty string if lock is true\", function () {",
											"//     const responseData = pm.response.json();",
											"    ",
											"//     pm.expect(responseData).to.be.an('object');",
											"//     pm.expect(responseData.lock).to.equal(true);",
											"//     if (responseData.lock) {",
											"//         pm.expect(responseData.lockReason).to.be.a('string').and.to.have.lengthOf.at.least(1, \"lockReason should be a non-empty string\");",
											"//     }",
											"// });",
											"",
											"",
											"// pm.test(\"PhoneNumber and mobilePhoneNumber are in valid format\", function () {",
											"//     const responseData = pm.response.json().results;",
											"    ",
											"//     pm.expect(responseData).to.be.an('array');",
											"//     responseData.forEach(function(user) {",
											"//         pm.expect(user.phoneNumber).to.match(/^\\d{10}$/);",
											"//         pm.expect(user.mobilePhoneNumber).to.match(/^\\d{10}$/);",
											"//     });",
											"// });",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/object/access-accounts",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"object",
										"access-accounts"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.2 Ï†ëÏÜçÍ≥ÑÏ†ï Ï°∞Ìöå",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// ÏùëÎãµÏΩîÎìú ",
											"pm.test(\"ÏùëÎãµÏΩîÎìú ÌôïÏù∏: \",function(){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"// ÏùëÎãµ Fields Ï§ë Required Ìï≠Î™©Îì§ Ï°¥Ïû¨ÌïòÎäîÏßÄ ÌôïÏù∏ ",
											"pm.test(\"ÏùëÎãµ ÌïÑÎìú ÌôïÏù∏: \", function(){",
											"    let res = pm.response.json();",
											"    console.log(res);",
											"    let keys = ['id', 'name', \"department\", \"departmentCode\", ",
											"                \"jobPosition\", \"jobTitle\", \"phoneNumber\",",
											"                \"mobilePhoneNumber\", \"email\", \"firstAuthType\", ",
											"                \"secondAuthType\", \"comment\", \"startDate\", \"endDate\",",
											"                \"createDate\", \"passwordChangeDate\", \"lock\", \"lockReason\"]",
											"    pm.expect(res).to.have.keys(keys)",
											"});",
											"",
											"",
											"// ÏùëÎãµ ÏΩòÌÖêÏ∏† ÌÉÄÏûÖ ",
											"pm.test(\"Response Content-Type is application/json\", function () {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"});",
											"",
											"// Ïù¥Î©îÏùº ÌòïÏãù ÌôïÏù∏ ",
											"pm.test(\"Email is in a valid format\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.email).to.be.a('string');",
											"    pm.expect(responseData.email).to.match(/^.+@.+\\..+$/);",
											"});",
											"",
											"",
											"pm.test(\"StartDate and EndDate are in valid date format\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    // pm.expect(responseData.startDate).to.match(/^\\d{4}-\\d{2}-\\d{2}$/);",
											"    pm.expect(responseData.startDate).to.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$/);",
											"    // pm.expect(responseData.endDate).to.match(/^\\d{4}-\\d{2}-\\d{2}$/);",
											"    pm.expect(responseData.endDate).to.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$/);",
											"});",
											"",
											"// pm.test(\"Lock is a boolean value\", function () {",
											"//     const responseData = pm.response.json();",
											"    ",
											"//     pm.expect(responseData).to.be.an('object');",
											"//     pm.expect(responseData.lock).to.be.a('boolean');",
											"// });",
											"",
											"",
											"// pm.test(\"LockReason is a non-empty string\", function () {",
											"//   const responseData = pm.response.json();",
											"  ",
											"//   pm.expect(responseData).to.be.an('object');",
											"//   pm.expect(responseData.lockReason).to.be.a('string').and.to.have.lengthOf.at.least(1, \"LockReason should be a non-empty string\");",
											"// });",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": []
								},
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/object/access-accounts/5",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"object",
										"access-accounts",
										"5"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3 Ï†ëÏÜçÍ≥ÑÏ†ï Ï∂îÍ∞Ä",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('ÏÉÅÌÉúÏΩîÎìú ÌôïÏù∏:', function () {",
											"    pm.response.to.have.status(201);",
											"})",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"followOriginalHttpMethod": false
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\" : \"{{id}}\",\n  \"startDate\" : \"{{startDate}}\",\n  \"endDate\" : \"{{endDate}}\",\n  \"comment\" : \"{{comment}}\"\n}\n\n// {\n//   \"id\" : \"account001\",\n//   \"startDate\" : \"2022-01-01T00:00:00\",\n//   \"endDate\" : \"2022-12-31T23:59:59\",\n//   \"comment\" : \"comment for account001\"\n// }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/object/access-accounts/",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"object",
										"access-accounts",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "1.4 Ï†ëÏÜçÍ≥ÑÏ†ï ÏàòÏ†ï",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Check status\",function(){",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// // Ï¥àÍ∏∞ id Í∞í ÏÑ§Ï†ï\r",
											"// pm.variables.set(\"currentId\", 1235);\r",
											"\r",
											"// // Í∞Å ÏöîÏ≤≠ÎßàÎã§ id Í∞íÏùÑ Ï¶ùÍ∞ÄÏãúÌÇ§Îäî Ìï®Ïàò\r",
											"// function increaseId() {\r",
											"//     let currentId = pm.variables.get(\"currentId\");\r",
											"//     currentId++;\r",
											"//     pm.variables.set(\"currentId\", currentId);\r",
											"// }"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{id}}\",\n    \"startDate\": \"{{startDate}}\",\n    \"endDate\": \"{{endDate}}\",\n    \"comment\": \"{{comment}}\"\n}\n\n// {\n//     \"id\": \"\",\n//     \"startDate\": \"2022-01-01T00:00:00\",\n//     \"endDate\": \"2022-12-31T23:59:59\",\n//     \"comment\": \"comment for account001\"\n// }\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/object/access-accounts/{{index}}",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"object",
										"access-accounts",
										"{{index}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.5 Ï†ëÏÜçÍ≥ÑÏ†ï ÏÇ≠Ï†ú",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Check status\",function(){",
											"    // // 204 response ; the server successfully processed the request, but there is no data to return. ",
											"    // if (pm.response.code === 204) {",
											"    //     console.error('Success: Post request was successful with status code 204');",
											"    // } ",
											"    ",
											"    // // Check for \"Not Found\" error (HTTP status code 404)",
											"    // else if (pm.response.code === 404) {",
											"    //     console.error('Not Found: User ID not found with status code 404');",
											"    // }",
											"",
											"    // // Handle other status codes as needed",
											"    // else {",
											"    //     console.error('Unhandled status code:', pm.response.code);",
											"    // }",
											"    var status = pm.response.status;",
											"    console.log(status)",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"http://{{Host}}:{{Port}}/dbsafer/api/v1/users/user001"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/object/access-accounts/24",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"object",
										"access-accounts",
										"24"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "2. Ïñ¥ÌîåÎ¶¨ÏºÄÏù¥ÏÖò Í¥ÄÎ¶¨",
					"item": [
						{
							"name": "2.1 Ïñ¥ÌîåÎ¶¨ÏºÄÏù¥ÏÖò Î™©Î°ù Ï°∞Ìöå",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// ÏùëÎãµ Fields Ï§ë Required Ìï≠Î™©Îì§ Ï°¥Ïû¨ÌïòÎäîÏßÄ ÌôïÏù∏ ",
											"pm.test(\"ÏùëÎãµ ÌïÑÎìú ÌôïÏù∏\", function(){",
											"    let res = pm.response.json();",
											"    let keys = ['id', 'name', \"department\", \"departmentCode\", ",
											"                \"jobPosition\", \"jobTitle\", \"phoneNumber\",",
											"                \"mobilePhoneNumber\", \"email\", \"firstAuthType\", ",
											"                \"secondAuthType\", \"comment\", \"startDate\", \"endDate\",",
											"                \"createDate\", \"passwordChangeDate\", \"lock\", \"lockReason\"]",
											"    ",
											"    res.results.forEach(function(user) {",
											"        pm.expect(user).to.have.keys(keys)",
											"    });",
											"});",
											"",
											"",
											"pm.test(\"ÏÉÅÌÉúÏΩîÎìú 200 Ï≤¥ÌÅ¨\",function(){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"// pm.test(\"Response has results\", function(){",
											"//     let res = pm.response.json();",
											"//     pm.expect(res).to.have.keys('results')",
											"// });",
											"",
											"// pm.test(\"Get length of results\", function(){",
											"//     // let res = pm.response.json().results;",
											"//     // res.forEach((num) => {console.log(num)}); // iteration by forEach",
											"//     // for (let r of res) console.log(r); // iteration by for of",
											"",
											"//     let res = pm.response.json().results;",
											"//     const res_length = Object.entries(res).length;",
											"",
											"//     // const pre_text = \"Í≤∞Í≥ºÍ∞íÏùò Í∏∏Ïù¥Îäî : \";",
											"//     // const result = pre_text + res_length;",
											"//     console.log(\"Í≤∞Í≥ºÍ∞íÏùò Í∏∏Ïù¥Îäî :\", res_length);",
											"// })",
											"",
											"// pm.test(\"Response Content-Type is application/json\", function () {",
											"//     pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"// });",
											"",
											"",
											"// pm.test(\"Lock field is a boolean value\", function () {",
											"//     const responseData = pm.response.json();",
											"    ",
											"//     pm.expect(responseData).to.be.an('object');",
											"//     pm.expect(responseData.lock).to.be.a('boolean');",
											"// });",
											"",
											"",
											"// pm.test(\"Each 'id' in the 'results' array is a non-empty string\", function () {",
											"//     const responseData = pm.response.json();",
											"    ",
											"//     pm.expect(responseData.results).to.be.an('array');",
											"//     responseData.results.forEach(function(user) {",
											"//         pm.expect(user.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"ID should be a non-empty string\");",
											"//     });",
											"// });",
											"",
											"",
											"// pm.test(\"Check if 'endDate' is either null or in a valid date format\", function () {",
											"//     const responseData = pm.response.json();",
											"    ",
											"//     pm.expect(responseData.results).to.be.an('array');",
											"//     responseData.results.forEach(function(user) {",
											"//         pm.expect(user.endDate).to.satisfy(function (endDate) {",
											"//             return endDate === null || Date.parse(endDate);",
											"//         }, \"endDate should be null or in a valid date format\");",
											"//     });",
											"// });",
											"",
											"",
											"// pm.test(\"Ensure that lockReason is a non-empty string if lock is true\", function () {",
											"//     const responseData = pm.response.json();",
											"    ",
											"//     pm.expect(responseData).to.be.an('object');",
											"//     pm.expect(responseData.lock).to.equal(true);",
											"//     if (responseData.lock) {",
											"//         pm.expect(responseData.lockReason).to.be.a('string').and.to.have.lengthOf.at.least(1, \"lockReason should be a non-empty string\");",
											"//     }",
											"// });",
											"",
											"",
											"// pm.test(\"PhoneNumber and mobilePhoneNumber are in valid format\", function () {",
											"//     const responseData = pm.response.json().results;",
											"    ",
											"//     pm.expect(responseData).to.be.an('array');",
											"//     responseData.forEach(function(user) {",
											"//         pm.expect(user.phoneNumber).to.match(/^\\d{10}$/);",
											"//         pm.expect(user.mobilePhoneNumber).to.match(/^\\d{10}$/);",
											"//     });",
											"// });",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/object/applications",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"object",
										"applications"
									]
								}
							},
							"response": []
						},
						{
							"name": "2.2 Ïñ¥ÌîåÎ¶¨ÏºÄÏù¥ÏÖò Ï°∞Ìöå",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// ÏùëÎãµÏΩîÎìú ",
											"pm.test(\"ÏùëÎãµÏΩîÎìú ÌôïÏù∏: \",function(){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"// ÏùëÎãµ Fields Ï§ë Required Ìï≠Î™©Îì§ Ï°¥Ïû¨ÌïòÎäîÏßÄ ÌôïÏù∏ ",
											"pm.test(\"ÏùëÎãµ ÌïÑÎìú ÌôïÏù∏: \", function(){",
											"    let res = pm.response.json();",
											"    console.log(res);",
											"    let keys = ['id', 'name', \"department\", \"departmentCode\", ",
											"                \"jobPosition\", \"jobTitle\", \"phoneNumber\",",
											"                \"mobilePhoneNumber\", \"email\", \"firstAuthType\", ",
											"                \"secondAuthType\", \"comment\", \"startDate\", \"endDate\",",
											"                \"createDate\", \"passwordChangeDate\", \"lock\", \"lockReason\"]",
											"    pm.expect(res).to.have.keys(keys)",
											"});",
											"",
											"",
											"// ÏùëÎãµ ÏΩòÌÖêÏ∏† ÌÉÄÏûÖ ",
											"pm.test(\"Response Content-Type is application/json\", function () {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"});",
											"",
											"// Ïù¥Î©îÏùº ÌòïÏãù ÌôïÏù∏ ",
											"pm.test(\"Email is in a valid format\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.email).to.be.a('string');",
											"    pm.expect(responseData.email).to.match(/^.+@.+\\..+$/);",
											"});",
											"",
											"",
											"pm.test(\"StartDate and EndDate are in valid date format\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    // pm.expect(responseData.startDate).to.match(/^\\d{4}-\\d{2}-\\d{2}$/);",
											"    pm.expect(responseData.startDate).to.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$/);",
											"    // pm.expect(responseData.endDate).to.match(/^\\d{4}-\\d{2}-\\d{2}$/);",
											"    pm.expect(responseData.endDate).to.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$/);",
											"});",
											"",
											"// pm.test(\"Lock is a boolean value\", function () {",
											"//     const responseData = pm.response.json();",
											"    ",
											"//     pm.expect(responseData).to.be.an('object');",
											"//     pm.expect(responseData.lock).to.be.a('boolean');",
											"// });",
											"",
											"",
											"// pm.test(\"LockReason is a non-empty string\", function () {",
											"//   const responseData = pm.response.json();",
											"  ",
											"//   pm.expect(responseData).to.be.an('object');",
											"//   pm.expect(responseData.lockReason).to.be.a('string').and.to.have.lengthOf.at.least(1, \"LockReason should be a non-empty string\");",
											"// });",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": []
								},
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/object/access-accounts/5",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"object",
										"access-accounts",
										"5"
									]
								}
							},
							"response": []
						},
						{
							"name": "2.3 Ïñ¥ÌîåÎ¶¨ÏºÄÏù¥ÏÖò Ï∂îÍ∞Ä",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('ÏÉÅÌÉúÏΩîÎìú ÌôïÏù∏:', function () {",
											"    pm.response.to.have.status(201);",
											"})",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"followOriginalHttpMethod": false
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\" : \"{{name}}\",\n  \"startDate\" : \"{{startDate}}\",\n  \"endDate\" : \"{{endDate}}\",\n  \"comment\" : \"{{comment}}\"\n}\n\n// {\n//   \"name\" : \"application005\",\n//   \"startDate\" : \"2022-01-01T00:00:00\",\n//   \"endDate\" : \"2022-12-31T23:59:59\",\n//   \"comment\" : \"comment for application001\"\n// }\n\n// {\n//   \"id\" : \"account001\",\n//   \"startDate\" : \"2022-01-01T00:00:00\",\n//   \"endDate\" : \"2022-12-31T23:59:59\",\n//   \"comment\" : \"comment for account001\"\n// }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/object/applications/",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"object",
										"applications",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "2.4 Ïñ¥ÌîåÎ¶¨ÏºÄÏù¥ÏÖò ÏàòÏ†ï",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Check status\",function(){",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// // Ï¥àÍ∏∞ id Í∞í ÏÑ§Ï†ï\r",
											"// pm.variables.set(\"currentId\", 1235);\r",
											"\r",
											"// // Í∞Å ÏöîÏ≤≠ÎßàÎã§ id Í∞íÏùÑ Ï¶ùÍ∞ÄÏãúÌÇ§Îäî Ìï®Ïàò\r",
											"// function increaseId() {\r",
											"//     let currentId = pm.variables.get(\"currentId\");\r",
											"//     currentId++;\r",
											"//     pm.variables.set(\"currentId\", currentId);\r",
											"// }"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\" : \"{{name}}\",\n  \"startDate\" : \"{{startDate}}\",\n  \"endDate\" : \"{{endDate}}\",\n  \"comment\" : \"{{comment}}\"\n}\n\n// {\n//   \"name\" : \"application002\",\n//   \"startDate\" : \"2022-01-01T00:00:00\",\n//   \"endDate\" : \"2022-12-31T23:59:59\",\n//   \"comment\" : \"comment for application001\"\n// }\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/object/applications/{{object_index}}",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"object",
										"applications",
										"{{object_index}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "2.5 Ïñ¥ÌîåÎ¶¨ÏºÄÏù¥ÏÖò ÏÇ≠Ï†ú",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Check status\",function(){",
											"    // // 204 response ; the server successfully processed the request, but there is no data to return. ",
											"    // if (pm.response.code === 204) {",
											"    //     console.error('Success: Post request was successful with status code 204');",
											"    // } ",
											"    ",
											"    // // Check for \"Not Found\" error (HTTP status code 404)",
											"    // else if (pm.response.code === 404) {",
											"    //     console.error('Not Found: User ID not found with status code 404');",
											"    // }",
											"",
											"    // // Handle other status codes as needed",
											"    // else {",
											"    //     console.error('Unhandled status code:', pm.response.code);",
											"    // }",
											"    var status = pm.response.status;",
											"    console.log(status)",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"http://{{Host}}:{{Port}}/dbsafer/api/v1/users/user001"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/object/applications/22",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"object",
										"applications",
										"22"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "3. Îç∞Ïù¥ÌÑ∞ÎßàÏä§ÌÇπ Í¥ÄÎ¶¨",
					"item": [
						{
							"name": "3.1 Îç∞Ïù¥ÌÑ∞ÎßàÏä§ÌÇπ Î™©Î°ù Ï°∞Ìöå",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// ÏùëÎãµ Fields Ï§ë Required Ìï≠Î™©Îì§ Ï°¥Ïû¨ÌïòÎäîÏßÄ ÌôïÏù∏ ",
											"pm.test(\"ÏùëÎãµ ÌïÑÎìú ÌôïÏù∏\", function(){",
											"    let res = pm.response.json();",
											"    let keys = ['id', 'name', \"department\", \"departmentCode\", ",
											"                \"jobPosition\", \"jobTitle\", \"phoneNumber\",",
											"                \"mobilePhoneNumber\", \"email\", \"firstAuthType\", ",
											"                \"secondAuthType\", \"comment\", \"startDate\", \"endDate\",",
											"                \"createDate\", \"passwordChangeDate\", \"lock\", \"lockReason\"]",
											"    ",
											"    res.results.forEach(function(user) {",
											"        pm.expect(user).to.have.keys(keys)",
											"    });",
											"});",
											"",
											"",
											"pm.test(\"ÏÉÅÌÉúÏΩîÎìú 200 Ï≤¥ÌÅ¨\",function(){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"// pm.test(\"Response has results\", function(){",
											"//     let res = pm.response.json();",
											"//     pm.expect(res).to.have.keys('results')",
											"// });",
											"",
											"// pm.test(\"Get length of results\", function(){",
											"//     // let res = pm.response.json().results;",
											"//     // res.forEach((num) => {console.log(num)}); // iteration by forEach",
											"//     // for (let r of res) console.log(r); // iteration by for of",
											"",
											"//     let res = pm.response.json().results;",
											"//     const res_length = Object.entries(res).length;",
											"",
											"//     // const pre_text = \"Í≤∞Í≥ºÍ∞íÏùò Í∏∏Ïù¥Îäî : \";",
											"//     // const result = pre_text + res_length;",
											"//     console.log(\"Í≤∞Í≥ºÍ∞íÏùò Í∏∏Ïù¥Îäî :\", res_length);",
											"// })",
											"",
											"// pm.test(\"Response Content-Type is application/json\", function () {",
											"//     pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"// });",
											"",
											"",
											"// pm.test(\"Lock field is a boolean value\", function () {",
											"//     const responseData = pm.response.json();",
											"    ",
											"//     pm.expect(responseData).to.be.an('object');",
											"//     pm.expect(responseData.lock).to.be.a('boolean');",
											"// });",
											"",
											"",
											"// pm.test(\"Each 'id' in the 'results' array is a non-empty string\", function () {",
											"//     const responseData = pm.response.json();",
											"    ",
											"//     pm.expect(responseData.results).to.be.an('array');",
											"//     responseData.results.forEach(function(user) {",
											"//         pm.expect(user.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"ID should be a non-empty string\");",
											"//     });",
											"// });",
											"",
											"",
											"// pm.test(\"Check if 'endDate' is either null or in a valid date format\", function () {",
											"//     const responseData = pm.response.json();",
											"    ",
											"//     pm.expect(responseData.results).to.be.an('array');",
											"//     responseData.results.forEach(function(user) {",
											"//         pm.expect(user.endDate).to.satisfy(function (endDate) {",
											"//             return endDate === null || Date.parse(endDate);",
											"//         }, \"endDate should be null or in a valid date format\");",
											"//     });",
											"// });",
											"",
											"",
											"// pm.test(\"Ensure that lockReason is a non-empty string if lock is true\", function () {",
											"//     const responseData = pm.response.json();",
											"    ",
											"//     pm.expect(responseData).to.be.an('object');",
											"//     pm.expect(responseData.lock).to.equal(true);",
											"//     if (responseData.lock) {",
											"//         pm.expect(responseData.lockReason).to.be.a('string').and.to.have.lengthOf.at.least(1, \"lockReason should be a non-empty string\");",
											"//     }",
											"// });",
											"",
											"",
											"// pm.test(\"PhoneNumber and mobilePhoneNumber are in valid format\", function () {",
											"//     const responseData = pm.response.json().results;",
											"    ",
											"//     pm.expect(responseData).to.be.an('array');",
											"//     responseData.forEach(function(user) {",
											"//         pm.expect(user.phoneNumber).to.match(/^\\d{10}$/);",
											"//         pm.expect(user.mobilePhoneNumber).to.match(/^\\d{10}$/);",
											"//     });",
											"// });",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/object/datamasks",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"object",
										"datamasks"
									]
								}
							},
							"response": []
						},
						{
							"name": "3.2 Îç∞Ïù¥ÌÑ∞ÎßàÏä§ÌÇπ Ï°∞Ìöå",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// ÏùëÎãµÏΩîÎìú ",
											"pm.test(\"ÏùëÎãµÏΩîÎìú ÌôïÏù∏: \",function(){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"// ÏùëÎãµ Fields Ï§ë Required Ìï≠Î™©Îì§ Ï°¥Ïû¨ÌïòÎäîÏßÄ ÌôïÏù∏ ",
											"pm.test(\"ÏùëÎãµ ÌïÑÎìú ÌôïÏù∏: \", function(){",
											"    let res = pm.response.json();",
											"    console.log(res);",
											"    let keys = ['id', 'name', \"department\", \"departmentCode\", ",
											"                \"jobPosition\", \"jobTitle\", \"phoneNumber\",",
											"                \"mobilePhoneNumber\", \"email\", \"firstAuthType\", ",
											"                \"secondAuthType\", \"comment\", \"startDate\", \"endDate\",",
											"                \"createDate\", \"passwordChangeDate\", \"lock\", \"lockReason\"]",
											"    pm.expect(res).to.have.keys(keys)",
											"});",
											"",
											"",
											"// ÏùëÎãµ ÏΩòÌÖêÏ∏† ÌÉÄÏûÖ ",
											"pm.test(\"Response Content-Type is application/json\", function () {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"});",
											"",
											"// Ïù¥Î©îÏùº ÌòïÏãù ÌôïÏù∏ ",
											"pm.test(\"Email is in a valid format\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.email).to.be.a('string');",
											"    pm.expect(responseData.email).to.match(/^.+@.+\\..+$/);",
											"});",
											"",
											"",
											"pm.test(\"StartDate and EndDate are in valid date format\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    // pm.expect(responseData.startDate).to.match(/^\\d{4}-\\d{2}-\\d{2}$/);",
											"    pm.expect(responseData.startDate).to.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$/);",
											"    // pm.expect(responseData.endDate).to.match(/^\\d{4}-\\d{2}-\\d{2}$/);",
											"    pm.expect(responseData.endDate).to.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$/);",
											"});",
											"",
											"// pm.test(\"Lock is a boolean value\", function () {",
											"//     const responseData = pm.response.json();",
											"    ",
											"//     pm.expect(responseData).to.be.an('object');",
											"//     pm.expect(responseData.lock).to.be.a('boolean');",
											"// });",
											"",
											"",
											"// pm.test(\"LockReason is a non-empty string\", function () {",
											"//   const responseData = pm.response.json();",
											"  ",
											"//   pm.expect(responseData).to.be.an('object');",
											"//   pm.expect(responseData.lockReason).to.be.a('string').and.to.have.lengthOf.at.least(1, \"LockReason should be a non-empty string\");",
											"// });",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": []
								},
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/object/datamasks/5",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"object",
										"datamasks",
										"5"
									]
								}
							},
							"response": []
						},
						{
							"name": "3.3 Îç∞Ïù¥ÌÑ∞ÎßàÏä§ÌÇπ Ï∂îÍ∞Ä",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('ÏÉÅÌÉúÏΩîÎìú ÌôïÏù∏:', function () {",
											"    pm.response.to.have.status(201);",
											"})",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"followOriginalHttpMethod": false
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "// {\n//   \"name\" : \"{{name}}\",\n//   \"kind\" : \"{{kind}}\",\n//   \"value\" : \"{{value}}\",\n//   \"startDate\" : \"{{startDate}}\",\n//   \"endDate\" : \"{{endDate}}\",\n//   \"comment\" : \"{{comment}}\"\n// }\n\n// {\n//     \"name\": \"\",\n//     \"kind\": \"REGEX\",\n//     \"value\": \"/^[0-9]*$/\",\n//     \"startDate\": \"2022-01-01T00:00:00\",\n//     \"endDate\": \"2022-12-31T23:59:59\",\n//     \"comment\": \"comment for datamask001\"\n// }\n\n{\n  \"name\" : \"datamask004\",\n  \"kind\" : \"COLUMN\",\n  \"value\" : \"col_003\",\n  \"startDate\" : \"2022-01-01T00:00:00\",\n  \"endDate\" : \"2022-12-31T23:59:59\",\n  \"comment\" : \"comment for datamask001\"\n}\n\n// {\n//   \"id\" : \"account001\",\n//   \"startDate\" : \"2022-01-01T00:00:00\",\n//   \"endDate\" : \"2022-12-31T23:59:59\",\n//   \"comment\" : \"comment for account001\"\n// }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/object/datamasks/",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"object",
										"datamasks",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "3.4 Îç∞Ïù¥ÌÑ∞ÎßàÏä§ÌÇπ ÏàòÏ†ï",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Check status\",function(){",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// // Ï¥àÍ∏∞ id Í∞í ÏÑ§Ï†ï\r",
											"// pm.variables.set(\"currentId\", 1235);\r",
											"\r",
											"// // Í∞Å ÏöîÏ≤≠ÎßàÎã§ id Í∞íÏùÑ Ï¶ùÍ∞ÄÏãúÌÇ§Îäî Ìï®Ïàò\r",
											"// function increaseId() {\r",
											"//     let currentId = pm.variables.get(\"currentId\");\r",
											"//     currentId++;\r",
											"//     pm.variables.set(\"currentId\", currentId);\r",
											"// }"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\" : \"{{name}}\",\n  \"kind\" : \"{{kind}}\",\n  \"value\" : \"{{value}}\",\n  \"startDate\" : \"{{startDate}}\",\n  \"endDate\" : \"{{endDate}}\",\n  \"comment\" : \"{{comment}}\"\n}\n\n// {\n//   \"name\" : \"datamask002\",\n//   \"kind\" : \"REGEX\",\n//   \"value\" : \"/^[0-9]*$/\",\n//   \"startDate\" : \"2022-01-01T00:00:00\",\n//   \"endDate\" : \"2022-12-31T23:59:59\",\n//   \"comment\" : \"comment for datamask001\"\n// }\n\n// {\n//   \"id\" : \"account001\",\n//   \"startDate\" : \"2022-01-01T00:00:00\",\n//   \"endDate\" : \"2022-12-31T23:59:59\",\n//   \"comment\" : \"comment for account001\"\n// }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/object/datamasks/{{object_index}}",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"object",
										"datamasks",
										"{{object_index}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "3.5 Îç∞Ïù¥ÌÑ∞ÎßàÏä§ÌÇπ ÏÇ≠Ï†ú",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Check status\",function(){",
											"    // // 204 response ; the server successfully processed the request, but there is no data to return. ",
											"    // if (pm.response.code === 204) {",
											"    //     console.error('Success: Post request was successful with status code 204');",
											"    // } ",
											"    ",
											"    // // Check for \"Not Found\" error (HTTP status code 404)",
											"    // else if (pm.response.code === 404) {",
											"    //     console.error('Not Found: User ID not found with status code 404');",
											"    // }",
											"",
											"    // // Handle other status codes as needed",
											"    // else {",
											"    //     console.error('Unhandled status code:', pm.response.code);",
											"    // }",
											"    var status = pm.response.status;",
											"    console.log(status)",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"http://{{Host}}:{{Port}}/dbsafer/api/v1/users/user001"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/object/datamasks/7",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"object",
										"datamasks",
										"7"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "4. IP Ï£ºÏÜå Í¥ÄÎ¶¨",
					"item": [
						{
							"name": "4.1 IPÏ£ºÏÜå Î™©Î°ù Ï°∞Ìöå",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// ÏùëÎãµ Fields Ï§ë Required Ìï≠Î™©Îì§ Ï°¥Ïû¨ÌïòÎäîÏßÄ ÌôïÏù∏ ",
											"pm.test(\"ÏùëÎãµ ÌïÑÎìú ÌôïÏù∏\", function(){",
											"    let res = pm.response.json();",
											"    let keys = ['id', 'name', \"department\", \"departmentCode\", ",
											"                \"jobPosition\", \"jobTitle\", \"phoneNumber\",",
											"                \"mobilePhoneNumber\", \"email\", \"firstAuthType\", ",
											"                \"secondAuthType\", \"comment\", \"startDate\", \"endDate\",",
											"                \"createDate\", \"passwordChangeDate\", \"lock\", \"lockReason\"]",
											"    ",
											"    res.results.forEach(function(user) {",
											"        pm.expect(user).to.have.keys(keys)",
											"    });",
											"});",
											"",
											"",
											"pm.test(\"ÏÉÅÌÉúÏΩîÎìú 200 Ï≤¥ÌÅ¨\",function(){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"// pm.test(\"Response has results\", function(){",
											"//     let res = pm.response.json();",
											"//     pm.expect(res).to.have.keys('results')",
											"// });",
											"",
											"// pm.test(\"Get length of results\", function(){",
											"//     // let res = pm.response.json().results;",
											"//     // res.forEach((num) => {console.log(num)}); // iteration by forEach",
											"//     // for (let r of res) console.log(r); // iteration by for of",
											"",
											"//     let res = pm.response.json().results;",
											"//     const res_length = Object.entries(res).length;",
											"",
											"//     // const pre_text = \"Í≤∞Í≥ºÍ∞íÏùò Í∏∏Ïù¥Îäî : \";",
											"//     // const result = pre_text + res_length;",
											"//     console.log(\"Í≤∞Í≥ºÍ∞íÏùò Í∏∏Ïù¥Îäî :\", res_length);",
											"// })",
											"",
											"// pm.test(\"Response Content-Type is application/json\", function () {",
											"//     pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"// });",
											"",
											"",
											"// pm.test(\"Lock field is a boolean value\", function () {",
											"//     const responseData = pm.response.json();",
											"    ",
											"//     pm.expect(responseData).to.be.an('object');",
											"//     pm.expect(responseData.lock).to.be.a('boolean');",
											"// });",
											"",
											"",
											"// pm.test(\"Each 'id' in the 'results' array is a non-empty string\", function () {",
											"//     const responseData = pm.response.json();",
											"    ",
											"//     pm.expect(responseData.results).to.be.an('array');",
											"//     responseData.results.forEach(function(user) {",
											"//         pm.expect(user.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"ID should be a non-empty string\");",
											"//     });",
											"// });",
											"",
											"",
											"// pm.test(\"Check if 'endDate' is either null or in a valid date format\", function () {",
											"//     const responseData = pm.response.json();",
											"    ",
											"//     pm.expect(responseData.results).to.be.an('array');",
											"//     responseData.results.forEach(function(user) {",
											"//         pm.expect(user.endDate).to.satisfy(function (endDate) {",
											"//             return endDate === null || Date.parse(endDate);",
											"//         }, \"endDate should be null or in a valid date format\");",
											"//     });",
											"// });",
											"",
											"",
											"// pm.test(\"Ensure that lockReason is a non-empty string if lock is true\", function () {",
											"//     const responseData = pm.response.json();",
											"    ",
											"//     pm.expect(responseData).to.be.an('object');",
											"//     pm.expect(responseData.lock).to.equal(true);",
											"//     if (responseData.lock) {",
											"//         pm.expect(responseData.lockReason).to.be.a('string').and.to.have.lengthOf.at.least(1, \"lockReason should be a non-empty string\");",
											"//     }",
											"// });",
											"",
											"",
											"// pm.test(\"PhoneNumber and mobilePhoneNumber are in valid format\", function () {",
											"//     const responseData = pm.response.json().results;",
											"    ",
											"//     pm.expect(responseData).to.be.an('array');",
											"//     responseData.forEach(function(user) {",
											"//         pm.expect(user.phoneNumber).to.match(/^\\d{10}$/);",
											"//         pm.expect(user.mobilePhoneNumber).to.match(/^\\d{10}$/);",
											"//     });",
											"// });",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/object/ip-addresses",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"object",
										"ip-addresses"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.2 IPÏ£ºÏÜå Ï°∞Ìöå",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// ÏùëÎãµÏΩîÎìú ",
											"pm.test(\"ÏùëÎãµÏΩîÎìú ÌôïÏù∏: \",function(){",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"// ÏùëÎãµ Fields Ï§ë Required Ìï≠Î™©Îì§ Ï°¥Ïû¨ÌïòÎäîÏßÄ ÌôïÏù∏ ",
											"pm.test(\"ÏùëÎãµ ÌïÑÎìú ÌôïÏù∏: \", function(){",
											"    let res = pm.response.json();",
											"    console.log(res);",
											"    let keys = ['id', 'name', \"department\", \"departmentCode\", ",
											"                \"jobPosition\", \"jobTitle\", \"phoneNumber\",",
											"                \"mobilePhoneNumber\", \"email\", \"firstAuthType\", ",
											"                \"secondAuthType\", \"comment\", \"startDate\", \"endDate\",",
											"                \"createDate\", \"passwordChangeDate\", \"lock\", \"lockReason\"]",
											"    pm.expect(res).to.have.keys(keys)",
											"});",
											"",
											"",
											"// ÏùëÎãµ ÏΩòÌÖêÏ∏† ÌÉÄÏûÖ ",
											"pm.test(\"Response Content-Type is application/json\", function () {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"});",
											"",
											"// Ïù¥Î©îÏùº ÌòïÏãù ÌôïÏù∏ ",
											"pm.test(\"Email is in a valid format\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.email).to.be.a('string');",
											"    pm.expect(responseData.email).to.match(/^.+@.+\\..+$/);",
											"});",
											"",
											"",
											"pm.test(\"StartDate and EndDate are in valid date format\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    // pm.expect(responseData.startDate).to.match(/^\\d{4}-\\d{2}-\\d{2}$/);",
											"    pm.expect(responseData.startDate).to.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$/);",
											"    // pm.expect(responseData.endDate).to.match(/^\\d{4}-\\d{2}-\\d{2}$/);",
											"    pm.expect(responseData.endDate).to.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$/);",
											"});",
											"",
											"// pm.test(\"Lock is a boolean value\", function () {",
											"//     const responseData = pm.response.json();",
											"    ",
											"//     pm.expect(responseData).to.be.an('object');",
											"//     pm.expect(responseData.lock).to.be.a('boolean');",
											"// });",
											"",
											"",
											"// pm.test(\"LockReason is a non-empty string\", function () {",
											"//   const responseData = pm.response.json();",
											"  ",
											"//   pm.expect(responseData).to.be.an('object');",
											"//   pm.expect(responseData.lockReason).to.be.a('string').and.to.have.lengthOf.at.least(1, \"LockReason should be a non-empty string\");",
											"// });",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": []
								},
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/object/datamasks/5",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"object",
										"datamasks",
										"5"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.3 IPÏ£ºÏÜå Ï∂îÍ∞Ä",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('ÏÉÅÌÉúÏΩîÎìú ÌôïÏù∏:', function () {",
											"    pm.response.to.have.status(201);",
											"})",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"followOriginalHttpMethod": false
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ipFrom\" : \"192.168.106.1\",\n  \"ipTo\" : \"192.168.106.255\",\n  \"mac\" : \"\",\n  \"startDate\" : \"2022-01-01T00:00:00\",\n  \"endDate\" : \"2022-12-31T23:59:59\",\n  \"comment\" : \"comment for ip-address\"\n}\n\n// {\n//   \"ipFrom\" : \"{{ipFrom}}\",\n//   \"ipTo\" : \"{{ipTo}}\",\n//   \"mac\" : \"{{mac}}\",\n//   \"startDate\" : \"{{startDate}}\",\n//   \"endDate\" : \"{{endDate}}\",\n//   \"comment\" : \"{{comment}}\"\n// }\n\n// {\n//   \"id\" : \"account001\",\n//   \"startDate\" : \"2022-01-01T00:00:00\",\n//   \"endDate\" : \"2022-12-31T23:59:59\",\n//   \"comment\" : \"comment for account001\"\n// }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/object/ip-addresses",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"object",
										"ip-addresses"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4 IPÏ£ºÏÜå ÏàòÏ†ï",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Check status\",function(){",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// // Ï¥àÍ∏∞ id Í∞í ÏÑ§Ï†ï\r",
											"// pm.variables.set(\"currentId\", 1235);\r",
											"\r",
											"// // Í∞Å ÏöîÏ≤≠ÎßàÎã§ id Í∞íÏùÑ Ï¶ùÍ∞ÄÏãúÌÇ§Îäî Ìï®Ïàò\r",
											"// function increaseId() {\r",
											"//     let currentId = pm.variables.get(\"currentId\");\r",
											"//     currentId++;\r",
											"//     pm.variables.set(\"currentId\", currentId);\r",
											"// }"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "// {\n//   \"ipFrom\" : \"{{ipFrom}}\",\n//   \"ipTo\" : \"{{ipTo}}\",\n//   \"mac\" : \"{{mac}}\",\n//   \"startDate\" : \"{{startDate}}\",\n//   \"endDate\" : \"{{endDate}}\",\n//   \"comment\" : \"{{comment}}\"\n// }\n\n{\n  \"ipFrom\" : \"2.2.2.2\",\n  \"ipTo\" : \"3.3.3.3\",\n  \"mac\" : \"\",\n  \"startDate\" : \"2022-01-01T00:00:00\",\n  \"endDate\" : \"2022-12-31T23:59:59\",\n  \"comment\" : \"comment for ip-address\"\n}\n\n// {\n//   \"id\" : \"account001\",\n//   \"startDate\" : \"2022-01-01T00:00:00\",\n//   \"endDate\" : \"2022-12-31T23:59:59\",\n//   \"comment\" : \"comment for account001\"\n// }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/object/ip-addresses/14",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"object",
										"ip-addresses",
										"14"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.5 IPÏ£ºÏÜå ÏÇ≠Ï†ú",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Check status\",function(){",
											"    // // 204 response ; the server successfully processed the request, but there is no data to return. ",
											"    // if (pm.response.code === 204) {",
											"    //     console.error('Success: Post request was successful with status code 204');",
											"    // } ",
											"    ",
											"    // // Check for \"Not Found\" error (HTTP status code 404)",
											"    // else if (pm.response.code === 404) {",
											"    //     console.error('Not Found: User ID not found with status code 404');",
											"    // }",
											"",
											"    // // Handle other status codes as needed",
											"    // else {",
											"    //     console.error('Unhandled status code:', pm.response.code);",
											"    // }",
											"    var status = pm.response.status;",
											"    console.log(status)",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"http://{{Host}}:{{Port}}/dbsafer/api/v1/users/user001"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/object/ip-addresses/11",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"object",
										"ip-addresses",
										"11"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "ÏÑúÎπÑÏä§ Í¥ÄÎ¶¨ API",
			"item": [
				{
					"name": "ÏÑúÎπÑÏä§ Í¥ÄÎ¶¨",
					"item": [
						{
							"name": "ÏÑúÎπÑÏä§ Î™©Î°ù Ï°∞Ìöå",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// pm.test(\"Response has results\", function(){\r",
											"//     let res = pm.response.json();\r",
											"//     pm.expect(res).to.have.keys('results');\r",
											"// });\r",
											"\r",
											"// pm.test(\"Get length of results\", function(){\r",
											"//     let res = pm.response.json().results;\r",
											"//     res.forEach((num) => {console.log(num)}); // iteration by forEach\r",
											"//     for (let r of res) console.log(r); // iteration by for of\r",
											"\r",
											"//     let res = pm.response.json().results;\r",
											"//     const res_length = Object.entries(res).length;\r",
											"\r",
											"//     console.log(\"Í≤∞Í≥ºÍ∞íÏùò Í∏∏Ïù¥Îäî :\", res_length);\r",
											"// })\r",
											"\r",
											"// console.log(`Number of items: ${_.size(pm.response.json())}`)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/services",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"services"
									]
								}
							},
							"response": []
						},
						{
							"name": "ÏÑúÎπÑÏä§ Î≤àÌò∏ Ï°∞Ìöå",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// let host = pm.collectionVariables.get('Host');",
											"// let urlConcatenation = `http://${host}:8000/query`;",
											"",
											"// pm.sendRequest({",
											"//     url: urlConcatenation,",
											"//     method: 'POST',",
											"//     header: {",
											"//         'Content-Type': 'application/json',",
											"//         'Accept': '*/*'",
											"//     },",
											"//     body: {",
											"//         mode: 'raw',",
											"//         raw: 'select * from dbsafer3.services where no = 4'",
											"//     }",
											"// }, function(err, res) {",
											"//     if (err) {",
											"//         console.error(err);",
											"//     } else {",
											"//         try {",
											"//             let res_data = res.json();",
											"//             console.log(res_data)",
											"//         } catch (error) {",
											"//             console.error('Error parsing response JSON:', error);",
											"//         }",
											"//     }",
											"// });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// let host = pm.collectionVariables.get('Host');",
											"// let urlConcatenation = `http://${host}:8000/query`;",
											"",
											"// pm.sendRequest({",
											"//     url: urlConcatenation,",
											"//     method: 'POST',",
											"//     header: {",
											"//         'Content-Type': 'application/json',",
											"//         'Accept': '*/*'",
											"//     },",
											"//     body: {",
											"//         mode: 'raw',",
											"//         raw : '{\"query_text\": \"select * from dbsafer3.services where no = 4\"}'",
											"//     }",
											"// }, function(err, res) {",
											"//     if (err) {",
											"//         console.error(err);",
											"//     } else {",
											"//         try {",
											"//             let res_data = res.json();",
											"//             console.log(res_data)",
											"//         } catch (error) {",
											"//             console.error('Error parsing response JSON:', error);",
											"//         }",
											"//     }",
											"// });",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "// {\n//   \"query_text\" : \"select name from dbsafer3.services where no = 1\"\n// }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/services/143",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"services",
										"143"
									]
								}
							},
							"response": []
						},
						{
							"name": "ÏÑúÎπÑÏä§ Ï∂îÍ∞Ä",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// pm.test('ÏÉÅÌÉúÏΩîÎìú ÌôïÏù∏:', function () {\r",
											"//     pm.response.to.have.status(201);\r",
											"    \r",
											"// })\r",
											"\r",
											"\r",
											"// pm.test(\"Response status code is 500\", function () {\r",
											"//     pm.response.to.have.status(500);\r",
											"// });\r",
											"\r",
											"\r",
											"// pm.test(\"Content-Type header is 'text/xml'\", function () {\r",
											"//     pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"text/xml\");\r",
											"// });\r",
											"\r",
											"\r",
											"// pm.test(\"Response body is not empty\", function () {\r",
											"//     const responseData = xml2Json(pm.response.text());\r",
											"    \r",
											"//     pm.expect(responseData).to.not.be.empty;\r",
											"// });\r",
											"\r",
											"\r",
											"// pm.test(\"Response body is in a valid XML format\", function () {\r",
											"//     const responseData = xml2Json(pm.response.text());\r",
											"//     pm.expect(responseData).to.not.be.null;\r",
											"// });\r",
											"\r",
											"\r",
											"// pm.test(\"Verify that the response does not contain any sensitive information\", function () {\r",
											"//     const responseData = xml2Json(pm.response.text());\r",
											"    \r",
											"//     pm.expect(responseData).to.be.null;\r",
											"// });\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"sample-service100\",\n    \"address\": \"255.255.255.221\",\n    \"port\": 65535,\n    \"core\": 4,\n    \"type\": \"MYSQL\",\n    \"processCount\": 0.5,\n    \"sessionIdleTime\": \"604860\",\n    \"useNatIdentity\": true,\n    \"sslSupportType\": \"NOT_USE\",\n    \"secureConnectType\": \"NOT_USE\",\n    \"startDate\": \"2022-01-01T00:00:00\",\n    \"endDate\": \"2022-12-31T23:59:59\",\n    \"comment\": \"sample comment\"\n}\n\n\n\n// {\n//   \"name\" : \"{{name}}\",\n//   \"address\" : \"{{address}}\",\n//   \"port\" : \"{{port}}\",\n//   \"core\" : \"{{core}}\",\n//   \"type\" : \"{{type}}\",\n//   \"processCount\" : \"{{processCount}}\",\n//   \"sessionIdleTime\" : \"{{sessionIdleTime}}\",\n//   \"useNatIdentity\" : \"{{useNatIdentity}}\",\n//   \"sslSupportType\" : \"{{sslSupportType}}\",\n//   \"secureConnectType\" : \"{{secureConnectType}}\",\n//   \"startDate\" : \"{{startDate}}\",\n//   \"endDate\" : \"{{endDate}}\",\n//   \"comment\" : \"{{comment}}\"\n// }\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/services",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"services"
									]
								}
							},
							"response": []
						},
						{
							"name": "ÏÑúÎπÑÏä§ ÏàòÏ†ï",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{    \n    \"name\": \"sample\",\n    \"address\": \"1.2.3.\",\n    \"port\": 65535, // 65536 \n    \"core\": \"\", // 257\n    \"type\": \"\",\n    \"processCount\": 0.5, //31,\n    \"sessionIdleTime\": 604801 ,// 604801,\n    \"useNatIdentity\": true,\n    \"sslSupportType\": \"NOT_USE\",\n    \"secureConnectType\": \"NOT_USE\",\n    \"startDate\": \"2022-01-01T00:00:00\",\n    \"endDate\": \"2022-12-31T23:59:59\",\n    \"comment\": \"sample comment\"\n}\n\n// {    \n//     \"name\": \"sample-service18\",\n//     \"address\": \"1.2.3.4\",//\"64mM2EcUcWfaWj19UQFw0xhiA4B8aMSjYQqLTKJfcWq1z4pFGBvJBh9pAH4FMX3uQCDb91J31ChfRSpgV1n62ZHWenVL0Svmi3TWvCbGagQ4RK0uJU5ZfX1xA55D3QLANrQ4DmPC7PS38h3DhrUSwLqUcxmPFxPYwYj5aARQaULS0LqKQj1fYra5Qmzevb2vZitMe5aEJXHrf3qZ75SaEaX0ZLgNMz4aCf2Z4pUXzkLWLqe49gzZKBjtGLQKGP6\",\n//     \"port\": 65535, // 65536 \n//     \"core\": \"\", // 257\n//     \"type\": 4,\n//     \"processCount\": 0.5, //31,\n//     \"sessionIdleTime\": 604801 ,// 604801,\n//     \"useNatIdentity\": true,\n//     \"sslSupportType\": \"NOT_USE\",\n//     \"secureConnectType\": \"NOT_USE\",\n//     \"startDate\": \"2022-01-01T00:00:00\",\n//     \"endDate\": \"2022-12-31T23:59:59\",\n//     \"comment\": \"sample comment\"\n// }\n\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/services/143",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"services",
										"143"
									]
								}
							},
							"response": []
						},
						{
							"name": "ÏÑúÎπÑÏä§ ÏãúÏûë",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/services/1/start",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"services",
										"1",
										"start"
									]
								}
							},
							"response": []
						},
						{
							"name": "ÏÑúÎπÑÏä§ Ï†ïÏßÄ",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/services/1/stop",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"services",
										"1",
										"stop"
									]
								}
							},
							"response": []
						},
						{
							"name": "ÏÑúÎπÑÏä§ ÏÇ≠Ï†ú",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/services/145",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"services",
										"145"
									]
								}
							},
							"response": []
						},
						{
							"name": "ÏÑúÎπÑÏä§Ïùò Í∑∏Î£π Ï∂îÍ∞Ä",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/services/1/groups/14",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"services",
										"1",
										"groups",
										"14"
									]
								}
							},
							"response": []
						},
						{
							"name": "ÏÑúÎπÑÏä§Ïùò Í∑∏Î£π Ï†úÍ±∞",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/services/1/groups/14",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"services",
										"1",
										"groups",
										"14"
									]
								}
							},
							"response": []
						},
						{
							"name": "ÌÖåÏä§Ìä∏Ïö© DB query",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let host = pm.collectionVariables.get('Host');",
											"let urlConcatenation = `http://${host}:8000/query`;",
											"",
											"pm.sendRequest({",
											"    url: urlConcatenation,",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json',",
											"        'Accept': '*/*'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: 'select * from dbsafer3.services where no = 4'",
											"    }",
											"}, function(err, res) {",
											"    if (err) {",
											"        console.error(err);",
											"    } else {",
											"        try {",
											"            let res_data = res.json();",
											"            console.log(res_data)",
											"        } catch (error) {",
											"            console.error('Error parsing response JSON:', error);",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let host = pm.collectionVariables.get('Host');",
											"let urlConcatenation = `http://${host}:8000/query`;",
											"",
											"pm.sendRequest({",
											"    url: urlConcatenation,",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json',",
											"        'Accept': '*/*'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw : '{\"query_text\": \"select * from dbsafer3.services where no = 4\"}'",
											"    }",
											"}, function(err, res) {",
											"    if (err) {",
											"        console.error(err);",
											"    } else {",
											"        try {",
											"            let res_data = res.json();",
											"            console.log(res_data)",
											"        } catch (error) {",
											"            console.error('Error parsing response JSON:', error);",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"query_text\" : \"select name from dbsafer3.services where no = 1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://10.77.162.100:8000/query",
									"protocol": "http",
									"host": [
										"10",
										"77",
										"162",
										"100"
									],
									"port": "8000",
									"path": [
										"query"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "ÏÑúÎπÑÏä§ Í∑∏Î£πÍ¥ÄÎ¶¨",
					"item": [
						{
							"name": "ÏÑúÎπÑÏä§ Í∑∏Î£π Î™©Î°ù Ï°∞Ìöå",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// ÏùëÎãµ ÏΩîÎìú ÌôïÏù∏ \r",
											"pm.test(\"ÏÉÅÌÉúÏΩîÎìú 200 Ï≤¥ÌÅ¨\",function(){\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"// ÏùëÎãµ Fields Ï§ë Required Ìï≠Î™©Îì§ Ï°¥Ïû¨ÌïòÎäîÏßÄ ÌôïÏù∏ \r",
											"pm.test(\"ÏùëÎãµ ÌïÑÎìú ÌôïÏù∏\", function(){\r",
											"    let res = pm.response.json();\r",
											"    let keys = ['index', 'name', 'kind', 'comment'];\r",
											"    \r",
											"    res.results.forEach(function(service) {\r",
											"        pm.expect(service).to.have.keys(keys)\r",
											"    });\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/service/groups",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"service",
										"groups"
									]
								}
							},
							"response": []
						},
						{
							"name": "ÏÑúÎπÑÏä§ Í∑∏Î£π Ï°∞Ìöå",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// ÏùëÎãµ ÏΩîÎìú ÌôïÏù∏ \r",
											"pm.test(\"ÏÉÅÌÉúÏΩîÎìú 200 Ï≤¥ÌÅ¨\",function(){\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"// ÏùëÎãµ Fields Ï§ë Required Ìï≠Î™©Îì§ Ï°¥Ïû¨ÌïòÎäîÏßÄ ÌôïÏù∏ \r",
											"pm.test(\"ÏùëÎãµ ÌïÑÎìú ÌôïÏù∏\", function(){\r",
											"    let res = pm.response.json();\r",
											"    let keys = ['index', 'name', 'kind', 'comment'];\r",
											"    \r",
											"    res.results.forEach(function(service) {\r",
											"        pm.expect(service).to.have.keys(keys)\r",
											"    });\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/service/groups/",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"service",
										"groups",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "ÏÑúÎπÑÏä§ Í∑∏Î£π Ï∂îÍ∞Ä",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "// // ÏÑ±Í≥µÏºÄÏù¥Ïä§\n// { \n//   \"name\" : \"SampleServiceGroup004\",\n//   \"kind\" : \"DBMS\",\n//   \"comment\" : \"comment\"\n// },\n\n\n// // name ÎàÑÎùΩ\n// {\n//   \"name\" : \"\",\n//   \"kind\" : \"DBMS\",\n//   \"comment\" : \"comment\"\n// },\n\n\n\n// // kind ÎàÑÎùΩ\n// {\n//   \"name\" : \"SampleServiceGroup005\",\n//   \"kind\" : \"\",\n//   \"comment\" : \"comment\"\n// }\n\n\n// // ÏûêÎ¶¨Ïàò Ï¥àÍ≥º \n// {\n//   \"name\" : \"hN6BCMS1Vre1pYrwvf5bNkQU8Zq4TAeQW3jNMwFSfiJvW8GpQR1KCTje8rJ7553A123456789123456789123456789123456789123456789123456789123456789\",\n//   \"kind\" : \"DBMS\",\n//   \"comment\" : \"comment\"\n// }\n\n// ÌäπÏàòÎ¨∏Ïûê ÏûÖÎ†• \n{\n  \"name\" : \"test@@#!@#\",\n  \"kind\" : \"DBMS\",\n  \"comment\" : \"comment\"\n}\n\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/service/groups",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"service",
										"groups"
									]
								}
							},
							"response": []
						},
						{
							"name": "ÏÑúÎπÑÏä§ Í∑∏Î£π ÏàòÏ†ï",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "// Ï†ïÏÉÅ ÏºÄÏù¥Ïä§ \n// {\n//   \"name\" : \"test123\",\n//   \"comment\" : \"sample_comment\"\n// }\n\n\n{\n  \"name\" : \"testtt!@#@\",\n  \"comment\" : \"sample_comment\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/service/groups/14",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"service",
										"groups",
										"14"
									]
								}
							},
							"response": []
						},
						{
							"name": "ÏÑúÎπÑÏä§ Í∑∏Î£π ÏÇ≠Ï†ú",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/service/groups/",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"service",
										"groups",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "ÏÑúÎπÑÏä§ Í∑∏Î£π ÎÇ¥ ÏÑúÎπÑÏä§ Ï∂îÍ∞Ä",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/service/groups/20/services/111/",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"service",
										"groups",
										"20",
										"services",
										"111",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "ÏÑúÎπÑÏä§ Í∑∏Î£π ÎÇ¥ ÏÑúÎπÑÏä§ Ï†úÍ±∞",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/service/groups/20/services/111",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"port": "{{Port}}",
									"path": [
										"dbsafer",
										"api",
										"v1",
										"service",
										"groups",
										"20",
										"services",
										"111"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{AccessToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Ïó∞ÎèôÏ†ïÏ±Ö(Ï†ëÍ∑º) Í¥ÄÎ¶¨",
			"item": [
				{
					"name": "Ïó∞ÎèôÏ†ïÏ±Ö(Ï†ëÍ∑º) Î™©Î°ù Ï°∞Ìöå",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AccessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/policy/custom/access-policies/",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"port": "{{Port}}",
							"path": [
								"dbsafer",
								"api",
								"v1",
								"policy",
								"custom",
								"access-policies",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Ïó∞ÎèôÏ†ïÏ±Ö(Ï†ëÍ∑º) Ï°∞Ìöå",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AccessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/policy/custom/access-policies/1/",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"port": "{{Port}}",
							"path": [
								"dbsafer",
								"api",
								"v1",
								"policy",
								"custom",
								"access-policies",
								"1",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Ïó∞ÎèôÏ†ïÏ±Ö(Ï†ëÍ∑º) Ï∂îÍ∞Ä",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Read the JSON file content\r",
									"var jsonData = pm.iterationData.toObject();\r",
									"console.log(jsonData);\r",
									"\r",
									"// Convert the sqlPrivileges string to an array\r",
									"// var sqlPrivilegesArray = jsonData.sqlPrivileges.split(\", \");\r",
									"// console.log(sqlPrivilegesArray);\r",
									"\r",
									"// Set the request body using the JSON data\r",
									"pm.request.body.raw = JSON.stringify({\r",
									"    policyId: jsonData.policyId,\r",
									"    userId: jsonData.userId,\r",
									"    account: jsonData.account,\r",
									"    clientIpBegin: jsonData.clientIpBegin,\r",
									"    clientIpEnd: jsonData.clientIpEnd,\r",
									"    serverAddress: jsonData.serverAddress,\r",
									"    serverPort: jsonData.serverPort,\r",
									"    sid: jsonData.sid,\r",
									"    // sqlPrivileges: sqlPrivilegesArray,\r",
									"    sqlPrivileges: jsonData.sqlPrivileges,\r",
									"    policyType: jsonData.policyType,\r",
									"    startDate: jsonData.startDate,\r",
									"    endDate: jsonData.endDate\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AccessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "// {\n//   \"policyId\" : \"POLICY_20230101001\",\n//   \"userId\" : \"\",\n//   \"account\" : \"account001\",\n//   \"clientIpBegin\" : \"1.1.1.1\",\n//   \"clientIpEnd\" : \"2.2.2.2\",\n//   \"serverAddress\" : \"1.1.1.1\",\n//   \"serverPort\" : 3306,\n//   \"sid\" : \"instance001\",\n//   \"sqlPrivileges\" : [ \"SELECT\", \"INSERT\" ],\n//   \"startDate\" : \"2022-01-01T00:00:00\",\n//   \"endDate\" : \"2022-12-31T23:59:59\"\n// }\n\n\n{\n    \"policyId\": \"{{policyId}}\",\n    \"userId\": \"{{userId}}\",\n    \"account\": \"{{account}}\",\n    \"clientIpBegin\": \"{{clientIpBegin}}\",\n    \"clientIpEnd\": \"{{clientIpEnd}}\",\n    \"serverAddress\": \"{{serverAddress}}\",\n    \"serverPort\": {{serverPort}},\n    \"sid\": \"{{sid}}\",\n    \"sqlPrivileges\": \"{{sqlPrivileges}}\",\n    \"policyType\": \"{{policyType}}\",\n    \"startDate\": \"{{startDate}}\",\n    \"endDate\": \"{{endDate}}\"\n}\n\n// {\n//     \"policyId\": \"POLICY_4\",\n//     \"userId\": \"user004\",\n//     \"account\": \"account001\",\n//     \"clientIpBegin\": \"1.1.1.256\",\n//     \"clientIpEnd\": \"2.2.2.2\",\n//     \"serverAddress\": \"1.1.1.1\",\n//     \"serverPort\": 3306,\n//     \"sid\": \"instance001\",\n//     \"sqlPrivileges\": [\n//         \"INSERT\",\n//         \"SELECT\"\n//     ],\n//     \"policyType\": \"SAC\",\n//     \"startDate\": \"2022-01-01T00:00:00\",\n//     \"endDate\": \"2022-12-31T23:59:59\"\n// }\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/policy/custom/access-policies",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"port": "{{Port}}",
							"path": [
								"dbsafer",
								"api",
								"v1",
								"policy",
								"custom",
								"access-policies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Ïó∞ÎèôÏ†ïÏ±Ö(Ï†ëÍ∑º) ÏàòÏ†ï",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AccessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "// {\n//   \"policyId\" : \"POLICY_20230101001\",\n//   \"userId\" : \"\",\n//   \"account\" : \"account002\",\n//   \"clientIpBegin\" : \"4.4.4.4\",\n//   \"clientIpEnd\" : \"5.5.5.5\",\n//   \"serverAddress\" : \"2.2.2.2\",\n//   \"serverPort\" : 3306,\n//   \"sid\" : \"instance001\",\n//   \"sqlPrivileges\" : [ \"SELECT\", \"INSERT\", \"DELETE\" ],\n//   \"startDate\" : \"2022-01-01T00:00:00\",\n//   \"endDate\" : \"2022-12-31T23:59:59\"\n// }\n\n{\n  \"policyId\" : \"POLICY_20230101001\",\n  \"userId\" : \"user001!@#$\",\n  \"account\" : \"account001\",\n  \"clientIpBegin\" : \"1.1.1.256\",\n  \"clientIpEnd\" : \"2.2.2.256\",\n  \"serverAddress\" : \"1.1.1.256\",\n  \"serverPort\" : 65536,\n  \"sid\" : \"instance001\",\n  \"sqlPrivileges\" : [ \"INSERT\", \"SELECT\" ],\n  \"policyType\" : \"SAC\",\n  \"startDate\" : \"2022-01-01T00:00:00\",\n  \"endDate\" : \"2022-12-31T23:59:59\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/policy/custom/access-policies/1",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"port": "{{Port}}",
							"path": [
								"dbsafer",
								"api",
								"v1",
								"policy",
								"custom",
								"access-policies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Ïó∞ÎèôÏ†ïÏ±Ö(Ï†ëÍ∑º) Ïû†Í∏à",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AccessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"policyId\" : \"POLICY_20230101001\",\n  \"userId\" : \"user001\",\n  \"account\" : \"account002\",\n  \"clientIpBegin\" : \"4.4.4.4\",\n  \"clientIpEnd\" : \"5.5.5.5\",\n  \"serverAddress\" : \"2.2.2.2\",\n  \"serverPort\" : 3306,\n  \"sid\" : \"instance001\",\n  \"sqlPrivileges\" : [ \"SELECT\", \"INSERT\", \"DELETE\" ],\n  \"startDate\" : \"2022-01-01T00:00:00\",\n  \"endDate\" : \"2022-12-31T23:59:59\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/policy/custom/access-policies/lock?policyId=POLICY_20230101001",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"port": "{{Port}}",
							"path": [
								"dbsafer",
								"api",
								"v1",
								"policy",
								"custom",
								"access-policies",
								"lock"
							],
							"query": [
								{
									"key": "policyId",
									"value": "POLICY_20230101001"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Ïó∞ÎèôÏ†ïÏ±Ö(Ï†ëÍ∑º) Ïû†Í∏àÌï¥Ï†ú",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AccessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"policyId\" : \"POLICY_20230101001\",\n  \"userId\" : \"user001\",\n  \"account\" : \"account002\",\n  \"clientIpBegin\" : \"4.4.4.4\",\n  \"clientIpEnd\" : \"5.5.5.5\",\n  \"serverAddress\" : \"2.2.2.2\",\n  \"serverPort\" : 3306,\n  \"sid\" : \"instance001\",\n  \"sqlPrivileges\" : [ \"SELECT\", \"INSERT\", \"DELETE\" ],\n  \"startDate\" : \"2022-01-01T00:00:00\",\n  \"endDate\" : \"2022-12-31T23:59:59\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/policy/custom/access-policies/unlock?policyId=",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"port": "{{Port}}",
							"path": [
								"dbsafer",
								"api",
								"v1",
								"policy",
								"custom",
								"access-policies",
								"unlock"
							],
							"query": [
								{
									"key": "policyId",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Ïó∞ÎèôÏ†ïÏ±Ö(Ï†ëÍ∑º) ÏÇ≠Ï†ú",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AccessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/policy/custom/access-policies/6",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"port": "{{Port}}",
							"path": [
								"dbsafer",
								"api",
								"v1",
								"policy",
								"custom",
								"access-policies",
								"6"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "old",
			"item": [
				{
					"name": "2.4ÏÇ¨Ïö©Ïûê Í∑∏Î£π ÏàòÏ†ï Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status\",function(){",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// // Ï¥àÍ∏∞ id Í∞í ÏÑ§Ï†ï\r",
									"// pm.variables.set(\"currentId\", 1235);\r",
									"\r",
									"// // Í∞Å ÏöîÏ≤≠ÎßàÎã§ id Í∞íÏùÑ Ï¶ùÍ∞ÄÏãúÌÇ§Îäî Ìï®Ïàò\r",
									"// function increaseId() {\r",
									"//     let currentId = pm.variables.get(\"currentId\");\r",
									"//     currentId++;\r",
									"//     pm.variables.set(\"currentId\", currentId);\r",
									"// }"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AccessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "// {\n//   \"password\" : \"cGFzc3dvcmQ=\",\n//   \"name\" : \"ÌôçÍ∏∏Îèô\",\n//   \"department\" : \"Í∞úÎ∞ú 2ÌåÄ\",\n//   \"departmentCode\" : \"0002\",\n//   \"jobPosition\" : \"Ï±ÖÏûÑÏó∞Íµ¨Ïõê\",\n//   \"jobTitle\" : \"ÌåÄÏû•\",\n//   \"phoneNumber\" : \"031-2345-6789\",\n//   \"mobilePhoneNumber\" : \"010-1234-5678\",\n//   \"email\" : \"gdhong@pnpsecure.com\",\n//   \"firstAuthType\" : null,\n//   \"secondAuthType\" : null,\n//   \"comment\" : \"Sample Account\",\n//   \"startDate\" : \"2024-01-01T00:00:00\",\n//   \"endDate\" : \"2024-12-31T23:59:59\"\n// } \n\n{\n    \"password\": \"{{password}}\",\n    \"name\": \"{{name}}\",\n    \"department\": \"{{department}}\",\n    \"departmentCode\": \"{{departmentCode}}\",\n    \"jobPosition\": \"{{jobPosition}}\",\n    \"jobTitle\": \"{{jobTitle}}\",\n    \"phoneNumber\": \"{{phoneNumber}}\",\n    \"mobilePhoneNumber\": \"{{mobilePhoneNumber}}\",\n    \"email\": \"{{email}}\",\n    \"firstAuthType\": \"{{firstAuthType}}\",\n    \"secondAuthType\": \"{{secondAuthType}}\",\n    \"comment\": \"{{name}}\",\n    \"startDate\": \"{{startDate}}\",\n    \"endDate\": \"{{endDate}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/users/{{index}}",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"port": "{{Port}}",
							"path": [
								"dbsafer",
								"api",
								"v1",
								"users",
								"{{index}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Ïù∏Ï¶ù API - ÏÑ±Îä•",
			"item": [
				{
					"name": "1.1Ïù∏Ï¶ùÌÜ†ÌÅ∞ Î∞úÍ∏â(100Î™Ö)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// console.log(\"managerId:\", pm.variables.get(\"managerId\"));\r",
									"// console.log(\"managerPassword:\", pm.variables.get(\"managerPassword\"));\r",
									"\r",
									"// var json_data = JSON.parse(responseBody);\r",
									"// pm.collectionVariables.set(\"managerId\", json_data.managerId)\r",
									"// pm.collectionVariables.set(\"managerPassword\", json_data.managerPassword)\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var json_data = JSON.parse(responseBody);",
									"pm.collectionVariables.set(\"AccessToken\", json_data.accessToken)",
									"console.log(json_data)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AccessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"managerId\": \"{{managerId}}\",\n    \"managerPassword\": \"{{managerPassword}}\" \n}\n\n// {\n//     \"managerId\": \"admin\",\n//     \"managerPassword\": \"YWRtaW4wMDc=\" \n// }\n\n\n// {\n//     \"managerId\": \"test1\",\n//     \"managerPassword\": \"ZGJzYWZlcjAwKSk=\" \n// }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{Host}}:{{Port}}/dbsafer/api/v1/auth/token",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"port": "{{Port}}",
							"path": [
								"dbsafer",
								"api",
								"v1",
								"auth",
								"token"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"let host = pm.collectionVariables.get('Host');",
					"let port = pm.collectionVariables.get('Port');",
					"let mgrid = pm.collectionVariables.get('ManagerID');",
					"let mgrpw = pm.collectionVariables.get('ManagerPW');",
					"let urlConcatenation = `http://${host}:${port}/dbsafer/api/v1/auth/token`;",
					"",
					"pm.sendRequest({",
					"    url: urlConcatenation,",
					"    method: 'POST',",
					"    header: {",
					"        'Content-Type': 'application/json',",
					"        'Accept': '*/*'",
					"    },",
					"    body: {",
					"        mode: 'raw',",
					"        raw: JSON.stringify({",
					"            \"managerId\": mgrid,",
					"            \"managerPassword\": mgrpw",
					"        })",
					"    }",
					"}, function(err, res) {",
					"    if (err) {",
					"        console.error(err);",
					"    } else {",
					"        try {",
					"            let res_data = res.json();",
					"            if (res_data.accessToken) {",
					"                pm.collectionVariables.set('AccessToken', res_data.accessToken);",
					"                // console.log('Access Token:', res_data.accessToken);",
					"                // console.log('Hello World!');",
					"            } else {",
					"                console.error('Access Token not found in the response');",
					"            }",
					"        } catch (error) {",
					"            console.error('Error parsing response JSON:', error);",
					"        }",
					"    }",
					"});"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "Host",
			"value": "192.168.104.60",
			"type": "string"
		},
		{
			"key": "Port",
			"value": "3182",
			"type": "string"
		},
		{
			"key": "ManagerID",
			"value": "admin",
			"type": "string"
		},
		{
			"key": "ManagerPW",
			"value": "YWRtaW4wMDc=",
			"type": "string"
		},
		{
			"key": "AccessToken",
			"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsInJvbGVzIjpbXSwiaWF0IjoxNzA1NjM3NDcxLCJleHAiOjE3MDU2MzkyNzF9.pJwVa8UbU29v7DGVsr-8xgu6eENurmSweOdhN0uXX-M",
			"type": "string"
		},
		{
			"key": "ClientID",
			"value": "",
			"type": "string"
		},
		{
			"key": "AccessToken(v2)",
			"value": "",
			"type": "string"
		},
		{
			"key": "refreshToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "SecretKey",
			"value": "",
			"type": "string"
		}
	]
}